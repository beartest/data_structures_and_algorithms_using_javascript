第13章 检索算法
	在列表中查找数据有两种方法：顺序查找和二分查找。顺序查找适用于元素随机排列的列表；二分查找适合于元素已排序的列表。
	顺序查找有时也称为线性查找。
	../Search/disArr.js
		10个一行输出arr数组元素。
	../Search/seqSearch.js(依赖../Search/disArr.js)
		顺序查找元素。
	../Search/findMinMax.js(依赖../Search/disArr.js)
		顺序查找最小值和最大值。
	../Search/selfOrganization.js
		自组织数据：该策略背后的理论是,通过将频繁查找到的元素置于数据集的起始位置来最小化查找次数。这是由于对数据的查找遵循“80-10原则”，类似这种“80-10原则”的概率分布被分布称为帕累托(Pareto)分布。
	../Search/binSearch.js(依赖../Search/disArr.js)(依赖../Search/insertionsort.js)
		添加插入排序方法辅助文件insertionsort.js。
		二分查找法，binSearch（）函数查找指定的值返回位置索引，并用count()函数统计这个值出现的次数。binSearch返回的索引位置附近可能有其他相同的值，count调用binSearch，如果找到指定值，则对数据集进行向左向右两个循环遍历。
	../Search/searchText.js(依赖../Search/insertionsort.js)
		使用顺序查找法和二分查找法查找文本数据，并加上计时。
	【练习】
		../Search/seqSearchLast.js(依赖../Search/disArr.js)
			顺序查找找到匹配的最后一个元素。
		../Search/compareSearch.js(依赖../Search/disArr.js)(依赖../Search/insertionsort.js)
			比较顺序查找法，排序加二分查找法两者的耗时。随着排序元素的增多，选择排序加二分查找法增大增大较多。
		../Search/findNthMin.js(依赖../Search/disArr.js)(依赖../Search/insertionsort.js)
			找到第n小的元素。排序后使用顺序查找法。