第11章 图和图算法
	有的图顶点有权重，也称为成本。
	图中的一系列顶点构成路径，路径中所有的顶点都由边连接。路径的长度用路径中第一个顶点到最后一个顶点之间边的数量表示。由指向自身的顶点组成的路径成为环，环的长度为0。
	圈是至少有一条边的路径，且路径的第一个顶点和最后一个顶点相同。除了起点与终点没有重复顶点的道路叫做简单圈，否则成为平凡圈。
	两个顶点之间有道路，那么这两个顶点就是强连通的。如果有向图的所有顶点都是强连通的，那么这个有向图也是强连通的。
	可以尝试用树的方式创建一个图类，这种情况下用基于对象的方式去处理就会有问题，因为图可能增长到非常大，用对象来表示图很快就回变得效率低下。
	表示图的方法有一种成为邻接表或者邻接数组，另一种成为邻接矩阵。
	../Graph/Graph.js
		属性：vertices，edges，adj
			vertices点个数，edges边个数，adj是边邻接数组，需要初始化为二维数组。
		方法：addEdge，showGraph	
	../Graph/testGraph.js(依赖../Graph/Graph.js)
		测试图类Graph。
	../Graph/testDFS.js(依赖../Graph/Graph.js)
		测试深度优先搜索。
		在Graph.js中添加属性marked，需要初始化为false。
		在Graph.js中添加方法dfs()，递归进行深度优先搜索。
	../Graph/testBFS.js(依赖../Graph/Graph.js)
		测试广度优先搜索。
		在Graph.js中添加方法bfs()。
	../Graph/testPath.js(依赖../Graph/Graph.js)
		测试最短路径。
		在Graph.js中添加属性edgeTo。并在bfs中添加赋值。
		在Graph.js中添加方法pathTo()和辅助方法hasPathTo();
		这里使用pathTo方法前，需要使用bfs方法对数组edgeTo进行呢一遍赋值，且bfs的传参应该和pathTo中的source一致，为起点值。
	../Graph/testSort.js(依赖../Graph/Graph.js)
		测试拓扑排序。
		在Graph.js中添加属性vertexList,用来存储节点的名称。
		在Graph.js中添加方法topSort()，及其辅助递归方法topSortHelper()，输出图节点名称的方法showGraphByName()。
	【练习】
		练习针对不同规模图的遍历效率问题进行讨论。以及地图实体数据抽象成图，进行处理。