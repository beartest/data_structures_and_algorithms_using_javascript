第4章 栈
	栈是一种高效的数据结构。是一种后入先出（LIFO，last-in-first-out）的数据结构。
	../Stack/Stack.js
		1.属性：dataStore，top
		2.方法：push，pop，peek，length，clear
			peek()方法在空栈调用的时候，结果是undefined。个人认为在不能排除元素本身为undefined的情况，需要综合top==0来判断。
			clear()方法是需要将top设为0，不需要对dataStore进行操作。
	../Stack/testStack.js(依赖../Stack/Stack.js)
		测试栈对象Stack。
	../Stack/mulBase.js(依赖../Stack/Stack.js)
		数制间的相互转换。
	../Stack/palindrome.js(依赖../Stack/Stack.js)
		回文。
	../Stack/factorial.js(依赖../Stack/Stack.js)
		栈常常被用来实现编程语言，这里使用栈实现递归。计算阶乘，第一种方法使用递归，第二种使用栈。
	【练习】
	../Stack/Exercise/bracket.js(依赖../Stack/Stack.js)
		判断括号是否匹配，不匹配的返回括号缺失位置。建立Bracket类，保存括号和对应位置。
		循环判断字符串中字符，遇到左括号入栈，遇到右括号查看栈顶元素是否匹配。循环结束后看栈中是否有未匹配的括号。
	../Stack/Exercise/postfix.js(依赖../Stack/Stack.js)
		中缀表达式转后缀表达式。
		判断是否是数字的时候使用isNaN()，而不是Number.isNaN()。因为Number.isNaN("+")为false。
		isNaN的必要性：因为NaN不能通过==和===来判断，==和===都会为false。
		isNaN可以看做Number.isNaN(Number(value));
		isNaN的参数不是数字时，首先会尝试将这个参数转换为数值。bool和空字符串""会被转化为数字1,0，undefined和空对象{}不能转化为数字。
	../Stack/Exercise/candy.js(依赖../Stack/Stack.js)
		佩兹糖果盒。